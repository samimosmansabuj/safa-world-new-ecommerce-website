# Generated by Django 5.0 on 2023-12-14 03:14

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0003_customer_last_name_alter_customer_first_name'),
        ('product', '0002_alter_product_updated_date'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('product_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.customer')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.product')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('product_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='account.customer')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='product.product')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.IntegerField(db_index=True, default='SafaWorld 497212', editable=False, unique=True)),
                ('shipping_charge', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_paid', models.BooleanField(default=False)),
                ('transaction_id', models.CharField(blank=True, max_length=150, null=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Unpaid', 'Unpaid'), ('Recieved', 'Recieved'), ('Processing', 'Processing'), ('On The Way', 'On The Way'), ('Delivered', 'Delivered')], default='Pending', max_length=150)),
                ('payment_method', models.CharField(choices=[('COD', 'COD'), ('Bkash', 'Bkash'), ('Nagad', 'Nagad'), ('Bank', 'Bank')], default='COD', max_length=150)),
                ('order_note', models.TextField(blank=True, null=True)),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('adress', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='account.address')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='account.customer')),
                ('orderitem', models.ManyToManyField(to='order.orderitem')),
            ],
            options={
                'ordering': ['order_date'],
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.customer')),
                ('product', models.ManyToManyField(to='product.product')),
            ],
        ),
    ]
